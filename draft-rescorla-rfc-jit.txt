



Network Working Group                                        E. Rescorla
Internet-Draft                                   Windy Hill Systems, LLC
Intended status: Informational                         24 September 2023
Expires: 27 March 2024


                      Just-In-Time RFC Publication
                     draft-rescorla-rfc-jit-latest

Abstract

   This document describes a new approach to RFC publication that is
   intended to decrease publication time while also allowing easy
   revisions without re-running the entire RFC publication process.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Source for this draft and an issue tracker can be found at
   https://github.com/ekr/draft-rescorla-rfc-jit.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 27 March 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Requirements
   4.  Generic Structure
     4.1.  Editing
     4.2.  IANA Interaction
   5.  Mapping onto the RFC Series
   6.  Implications for Existing Organizational Structures
     6.1.  IETF Consensus
     6.2.  RFC Series Consulting Editor
     6.3.  The RPC
     6.4.  Toolchains
   7.  Security Considerations
   8.  IANA Considerations
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   The current RFC publication process is unwieldy and slow.  This is a
   poor match for an environment where protocol specifications routinely
   see wide deployment well in advance of IESG approval, let alone RFC
   publication.  Despite the long publication time, RFCs also routinely
   contain errors (as an example, TLS 1.3 [RFC8446] currently has >40
   errata).  However, fixing these errors is prohibitively difficult as
   it currently requires publishing a new RFC, which incurs new delay,
   at which point new errors will have accumulated and the cycle begins
   again.

   This document proposes a new approach to RFC publication, termed
   "just-in-time" (JIT) publication, which is designed to address both
   of these issues.  JIT publication is centered around two basic ideas:

   *  A series of documents which are intended to be semantically
      identical, even though the text may be different.

   *  The ability to rapidly publish new documents within a series as
      soon as the requisite level of approval has been obtained.

   When put together, these allow us to radically decrease the time to
   publish while also cheaply addressing issues as they are discovered.
   This document focuses on the IETF Stream as that is the dominant
   source of RFCs.  However, the contents potentially apply to other
   streams as well.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Requirements

   The method in this document is intended to balance a number of
   requirements.

   *  Rapid publication: It MUST be possible to publish documents
      rapidly once their content has been approved.  This allows for
      immediate deployment as soon as the IETF part of the process is
      complete.

   *  Easy updating: Once a document is published it MUST be easy to
      make non-semantic changes (editorial fixes, clarifications, etc.)
      without re-running the whole process.

   *  Referential Integrity: It MUST be possible to reference a specific
      version of a document (i.e., the exact bits).

   *  Semantic References: It MUST be possible to reference a document
      as a semantic entity, including whatever editorial updates have
      been made.

   *  Professional Editing: It MUST be possible to have professional
      editing for documents.

4.  Generic Structure

   This section describes a generic publication structure that does not
   take into account the RFC Series.  In Section 5 we describe how it
   might be mapped onto the existing RFC Series.  It makes use of a two-
   level structure of Document and Version.

   *  Documents refer to the semantics of a given specification and thus
      may appear in multiple Versions.  Each document has a document
      identifier D which is persistent through the life of the document
      and refers to the latest Version.

   *  Version refer to specific instances of a Document.  All versions
      of a given document have the same semantics.  Each version has a
      unique version identifier under the document, as in D.V.

   In this design, documents would proceed through the IETF process as
   usual until they got to IESG approval.  At the point where they were
   approved by the RFC they would receive a document identifier and the
   initial version would be published, e.g., at https://rfc-
   editor.org/documents/D.0.

   Once the initial version was published, new versions could be
   immediately published based on approval from either the responsible
   Area Director (or perhaps the WG Chair), who would be responsible for
   confirming that the changes did not change the document semantics.
   This allows for errata, etc. to be immediately applied to the
   document in place.  Note that this is consistent with AUTH48 process
   because the AD can sign off on changes after IESG approval (see
   Section 6.1 for more on this).  Moreover, the stakes here are quite
   low because we can always publish a new Version that reverts any
   change.

4.1.  Editing

   In this model, V.0 can be published without any professional editing
   other than what occurs during the normal WG and IESG process.  This
   is intended to favor rapid publication over perfection, but is still
   compatible with editing.  There are two primary options:

   *  Post-publication editing: The document can be edited after
      publication with the edits being folded into new versions.  This
      will happen naturally to some extent with active documents as
      readers find issues, but it also provides a way for professional
      editing to be fed in.

   *  Pre-publication editing: In cases where the IESG deems a document
      to be particularly hard to read, it can be sent for initial
      editing prior to publication.

   It is also possible to do a combination of these, with some level of
   pre-publication editing followed by subsequent volunteer and
   professional post-publication editing.  Because it is easy to mint
   new versions, getting the first version perfect is less important.

4.2.  IANA Interaction

   Because documents contain IANA considerations sections, these
   considerations MUST be accurate.  This can be achieved in one of two
   ways (1) the document can be held until IANA actions are complete or
   (2) the document can refer to an external registry but not have any
   code points in it.  The former seems preferable, as it avoids having
   a published version with incorrect code points and the IANA actions
   can be finished during IETF review.  Note that it is not necessary
   for the IANA actions to be perfect, as the IANA considerations
   section and the IANA registry can be adjusted after the initial
   version is published.

5.  Mapping onto the RFC Series

   There are at least two ways to map this onto the existing RFC Series,
   which only has one level with each RFC being unchanging.

   *  Add a new level of Document identifiers with RFCs as versions
      (e.g., D1234.1 -> RFC 123456)

   *  Add a new level of Version below RFC (e.g., RFC8446.0, RFC8446.1,
      etc.), with the main RFC# pointing to the most current version.

   Either of these would probably work, and which people prefer to some
   extent depends on their priors.  However, it's worth noting that the
   former approach would create a new reference that people would
   generally be pointed to that wasn't RFCs, whereas the second would
   not.  In addition, it would start to burn through the RFC numbers
   very quickly, especially if each erratum creates a new version.

6.  Implications for Existing Organizational Structures

   The primary impact of what is proposed here is to lower the stakes
   for decisions we make about the RFC series because it is possible to
   publish revised versions that embody different decisions.  For
   instance, stylistic questions around word choice or layout are more
   easily changed if we later determine that the wrong decision was
   made.  This has some implications for the organizational structures
   we need.

6.1.  IETF Consensus

   All IETF Stream documents require IETF rough consensus [RFC8789].  As
   with the existing publication process, the combination of IETF Last
   Call and IESG review is intended to ensure that the initial published
   document as reviewed by the IESG has IETF Consensus.  The JIT
   publication process in principal allows for subsequent revisions to
   incorporate material that does not have consensus.

   However, it is _already_ possible to introduce non-consensus changes
   in RFCs during AUTH48.  Authors routinely make changes to RFCs during
   the AUTH48 process; the RPC does not prevent these changes but just
   requires that substantive changes be approved by the appropriate AD.
   This proposal extends the period when changes can be made past
   initial RFC publication but the risk of non-consensus changes being
   made is mitigated by several factors:

   1.  Changes are explicitly restricted to those without any semantic
       content, whereas AUTH48 changes can be semantically meaningful at
       the ADs discretion.

   2.  Any such changes are clearly visible as a diff from the previous
       version, so this situation is readily detectable.

   3.  It is trivial to publish a new version reverting any non-
       consensus changes.

   Together, these changes minimize the risk of semantic changes being
   introduced to published RFCs.

6.2.  RFC Series Consulting Editor

   This proposal does not necessarily speak one way or the other to
   whether we have an RFC Series Consulting Editor (RSCE).  However, if
   post-publication editing -- which is enabled by this proposal -- is
   used, then some of the functions of the RSCE become less salient.  In
   particular, at present Internet-Drafts do not really follow the RFC
   Style Guide except to the extent to which (1) either authors do so or
   (2) the tools do so automatically.  Thus, if documents are published
   once they clear the IESG they may not conform to the style guide,
   though later revisions might do so.  This somewhat reduces the
   importance of a unified style guide.

   Similarly, because it detaches the question of what makes a document
   a standard (in this case, first publication as an RFC) from long term
   strategy for the RFC Series, this proposal would reduce the
   dependency on the IETF side on extensive RSCE involvement, with the
   expectation that the IETF would decide on what it needed prior to
   first publication.  A separate process could then be used to address
   broader RFC Series issues that crossed all streams.

6.3.  The RPC

   In the structure contemplated here, the RPC would probably do less.
   Specifically:

   *  Some documents might not be processed by the RPC at all and would
      simply be published as-is.

   *  We would attempt to minimize the amount of semi-mechanical changes
      that the RPC made so that it was easy to re-publish.  For
      instance, in some cases references in the RFC are different from
      those in the I-D even if both are generated from the DOI.  We
      would want to automate these transformations.

   *  The RPC would not need to manage AUTH48 in post-publication
      review; in some versions their proposed edits could be handled
      like any other edits.

   *  The RPC would not need to do cluster 238-style dependency
      management and we could just publish documents as soon as they
      were approved by the IESG with whatever references the IESG
      considered successful.

   In addition, because the RPC was not on the critical path to
   standards availability, it would allow for more flexible arrangements
   with the LLC.  For example, currently when the RPC falls behind their
   SLA it causes disruption of the whole process.  However, in a post-
   publication editing setting, the LLC can decide how much editing it
   wants and tune SLAs and RPC cost appropriately.  Note that it is
   still possible to run entirely in a pre-publication editing mode,
   simply not necessary.

6.4.  Toolchains

   Currently we have an odd mix of toolchains in which authors use a
   variety of input formats (Word, XML, Markdown) but then the RPC works
   only with XML (this used to be nroff).  A continuous publication
   structure like this puts pressure on this structure.  We already have
   this problem now with documents which started in markdown where the
   effort to product a bis is very large as either the authors need to
   work in XML or backport RFC Ed changes into markdown (an imperfect
   process) but if revisions are common then that clearly makes things
   worse.

   There are a number of possible options, including:

   *  A single mandatory toolchain

   *  A small set of allowed toolchains

   In the latter case, the amount of editing that the RPC could do in
   practice would be somewhat limited, although presumably they could
   still do copy editing.

   In either case, it might be desirable to make the toolchain somewhat
   more strict about enforcing various style requirements in order to
   ensure that the first published version met whatever minimum
   stylistic rules the IETF wishes to enforce.

7.  Security Considerations

   This document has no impact on security.

8.  IANA Considerations

   This document has no IANA actions.

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

9.2.  Informative References

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

   [RFC8789]  Halpern, J., Ed. and E. Rescorla, Ed., "IETF Stream
              Documents Require IETF Rough Consensus", BCP 9, RFC 8789,
              DOI 10.17487/RFC8789, June 2020,
              <https://www.rfc-editor.org/rfc/rfc8789>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Eric Rescorla
   Windy Hill Systems, LLC
   Email: ekr@rtfm.com
